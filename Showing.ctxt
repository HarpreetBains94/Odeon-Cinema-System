#BlueJ class context
comment0.params=movie\ time\ date\ screenNo
comment0.target=Showing(Movie,\ java.lang.String,\ java.time.LocalDate,\ int)
comment0.text=\r\nCreates\ a\ new\ showing\ object.\r\n\r\n\ @param\ movie\ Movie\ to\ be\ shown\ at\ given\ screen.\r\n\ @param\ time\ String,\ either\ Afternoon,\ Evening,\ Night\ 1,\ Night\ 2.\r\n\ @param\ date\ Date\ fo\ showing.\r\n
comment1.params=
comment1.target=void\ generatePrices()
comment10.params=
comment10.target=Movie\ getMovie()
comment11.params=
comment11.target=double\ returnRevenue()
comment11.text=\r\n\ Uses\ number\ of\ seats\ (Vip\ and\ non\ Vip)\ and\ time\ of\ showing\ to\r\n\ return\ the\ revenue.\r\n\r\n\ @return\ double\ -\ revenue.\r\n
comment12.params=
comment12.target=int\ returnViewNo()
comment12.text=\r\n\ Uses\ number\ of\ booked\ seats\ to\ return\ the\ number\ of\ viewers.\r\n\r\n\ @return\ int\ -\ Number\ of\ viewers.\r\n
comment13.params=
comment13.target=java.lang.String\ getDateString()
comment13.text=\r\n\ Returns\ the\ date\ as\ a\ string\ in\ the\ format\ dd/mm/yyyy.\r\n\r\n\ @return\ String\ -\ date\ (dd/mm/yyyy)\r\n
comment14.params=customer
comment14.target=void\ unBook(Customer)
comment14.text=\r\n\ Unbooks\ seat\ seat\ booked\ by\ customer\ passed\ in.\r\n\ mainly\ used\ for\ testing.\r\n\ @param\ customer\r\n\ @throws\ SeatBookError\r\n
comment15.params=customer
comment15.target=java.lang.String\ getCustomerSeatId(Customer)
comment15.text=\r\n\ Returns\ the\ seat\ id\ of\ seat\ booked\ by\ customer\ passed\ in\r\n\ @param\ customer\r\n\ @return\ String\ -\ seat\ id\r\n\ @throws\ NonValidOptionException\r\n
comment16.params=seatId
comment16.target=boolean\ unbook(java.lang.String)
comment16.text=\r\n\ Unbooks\ seat\ (sets\ its\ value\ in\ seats\ hashmap\ to\ false.)\ based\ on\ seat\ id\ passed\ in.\r\n\ @param\ seatId\r\n\ @return\r\n
comment2.params=
comment2.target=void\ showAvailableSeats()
comment2.text=\r\n\ Prints\ out\ available\ seats.\ Unavailable\ seats\ are\ represented\ as\ '***'\r\n
comment3.params=
comment3.target=java.lang.String\ getTime()
comment4.params=
comment4.target=java.time.LocalDate\ getDate()
comment5.params=customer
comment5.target=void\ book(Customer)
comment5.text=\r\n\ Shows\ available\ seats\ and\ prompts\ user\ to\ select\ a\ seat\ id.\ Seat\ is\ then\r\n\ booked\ (value\ in\ seats\ hashmap\ set\ to\ true).\r\n\r\n\ @return\ Seat\ object\ which\ has\ been\ booked.\r\n\ @return\ Null\ if\ seat\ was\ not\ booked.\r\n
comment6.params=customer
comment6.target=void\ bookFromField(Customer)
comment6.text=\r\n\ Same\ as\ book(Customer)\ but\ gets\ seat\ id\ from\ customer.getSeat()\ instead\ of\r\n\ prompting\ user\ to\ get\ seat\ id.\r\n\r\n\ @param\ customer\r\n\ @throws\ SeatBookError\r\n
comment7.params=
comment7.target=int\ getScreenNo()
comment8.params=showing
comment8.target=boolean\ compareTimes(Showing)
comment8.text=\r\n\ Returns\ true\ if\ dates\ and\ time\ of\ day\ match,\ false\ otherwise.\r\n\r\n\ @param\ showing\r\n\ @return\ Boolean\r\n
comment9.params=dateInput\ timeInput
comment9.target=java.lang.Integer\ compareTimes(java.time.LocalDate,\ java.lang.String)
comment9.text=\r\n\ Compares\ date\ and\ time.\ If\ they\ match\ the\ screen\ number\ of\ of\ the\ showing.\r\n\r\n\ @param\ dateInput\r\n\ @param\ timeInput\r\n\ @return\r\n
numComments=17
